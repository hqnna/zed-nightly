name: Build

on:
  workflow_call:
    inputs:
      repository:
        description: Repository to clone and build
        default: zed-industries/zed
        type: string
      ref:
        description: Branch/tag/ref to build
        required: true
        type: string
      patch:
        description: Apply someone120's (Yakira's) patch fixing LSP server discovery
        default: false
        type: boolean

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        backend: [vulkan]
        include:
          - backend: vulkan
            artifact_name: zed-nightly
            rustflags: ""

    steps:
      - name: Enable long paths in Git
        run: git config --system core.longpaths true

      - name: Enable long paths in Windows
        shell: powershell
        run: |
          New-ItemProperty `
          -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" `
          -Name "LongPathsEnabled" `
          -Value 1 -PropertyType DWORD `
          -Force

      - name: Install PSToml module
        shell: pwsh
        run: Install-Module -Name PSToml -Scope CurrentUser -Force

      - name: Checkout self
        uses: actions/checkout@v4

      - name: Checkout Zed      
        env: { GH_TOKEN: "${{ github.token }}" }
        run: gh repo clone ${{ inputs.repository }} zed -- -b ${{ inputs.ref }}
      
      - name: Apply patch
        if: ${{ inputs.patch }}
        working-directory: zed
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh pr checkout https://github.com/zed-industries/zed/pull/22600 && \
          git switch --detach ${{ inputs.ref }} && \
          git config user.email "ci@c.i" && \
          git config user.name "CI" && \
          git merge slash-windows-fix

      - name: Install rust nightly
        uses: dtolnay/rust-toolchain@stable
        with:
          target: wasm32-wasip1
          toolchain: nightly
          override: true

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.backend }}
          workspaces: "zed -> target"

      - name: Setup rustflags
        shell: pwsh
        run: ./Parse-Rustflags.ps1 ${{ matrix.rustflags }}

      - name: Build release
        working-directory: zed
        run: cargo build --release

      - name: Archive build
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: zed/target/release/zed.exe 

